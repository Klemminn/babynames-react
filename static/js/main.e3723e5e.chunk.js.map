{"version":3,"sources":["components/buttons/Button.tsx","components/buttons/ButtonGroup.tsx","components/buttons/IconButton.tsx","components/buttons/VoteButtons.tsx","components/inputs/Input.tsx","utils/ToastUtils.tsx","utils/ErrorUtils.tsx","components/inputs/EmailInput.tsx","components/inputs/InputGroup.tsx","components/inputs/InputGroupAddon.tsx","components/inputs/LinkReadOnlyInput.tsx","components/layout/Col.tsx","components/layout/Row.tsx","components/Card.tsx","components/NameCard.tsx","components/Header.tsx","components/Link.tsx","components/Spinner.tsx","environment/index.tsx","services/connector.tsx","services/AnswerService.tsx","services/NamesService.tsx","pages/Answer.tsx","pages/Home.tsx","pages/Names.tsx","pages/Send.tsx","pages/Results.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Button","children","className","loading","disabled","link","rest","classes","push","join","tag","Link","undefined","to","size","ButtonGroup","IconButton","icon","VoteButtons","onSelect","map","isApproved","index","key","color","onClick","changeIndex","Input","onChange","onChangeDelay","e","value","target","currentIndex","setTimeout","ToastUtilsInstance","toast","configure","autoClose","draggable","position","transition","Slide","text","success","info","warning","error","ErrorUtils","ToastUtils","errors","forEach","displayError","schema","yup","shape","email","required","EmailInput","onSubmit","saving","hasEmail","useState","setEmail","handleSubmit","event","a","preventDefault","validate","displayErrors","type","addonType","InputGroup","InputGroupAddon","LinkReadOnlyInput","url","window","location","origin","getUrl","readOnly","copy","Col","Row","Card","title","CardBody","CardTitle","NameCard","name","continueButton","unanswered","firstNamed","secondNamed","Header","Navbar","NavbarBrand","href","Spinner","envParams","api","connector","axios","create","baseURL","EnvParams","headers","Accept","AnswerService","get","data","body","post","NamesService","params","code","Answer","history","names","setNames","setLoading","setSaving","useParams","useEffect","getUnfinishedNames","getUnfinished","response","handleSelect","finishAnswer","length","slice","md","Home","nameTypes","label","defaultCount","liked","disliked","defaultName","startsWith","Names","setType","setName","count","setCount","isMale","checkGroup","createNewGroup","group","replace","getNameCount","isSender","getName","nameType","getNames","newAnswer","newCount","active","placeholder","Send","savingEmail","setSavingEmail","getCount","registerEmail","defaultResults","bothLiked","receiverLiked","senderLiked","Results","results","setResults","isNotFinished","setIsNotFinished","getResults","filter","result","find","n","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e3723e5e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button as BootstrapButton } from 'reactstrap'\r\n\r\nimport { Spinner } from 'components'\r\n\r\ntype ButtonProps = {\r\n  children: any,\r\n  className?: string,\r\n  loading?: boolean,\r\n  disabled?: boolean,\r\n  link?: string,\r\n  [rest:string]: any\r\n}\r\n\r\nconst Button = ({ children, className, loading, disabled, link, ...rest }: ButtonProps) => {\r\n  const classes = ['button-component']\r\n  if (className) {\r\n    classes.push(className)\r\n  }\r\n\r\n  return (\r\n    <BootstrapButton\r\n      className={classes.join(' ')}\r\n      disabled={disabled || loading}\r\n      tag={link ? Link : undefined}\r\n      to={link || undefined}\r\n      {...rest}\r\n    >\r\n      {loading && (\r\n        <Spinner size={1} />\r\n      )}\r\n      {children}\r\n    </BootstrapButton>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { ButtonGroup as BootstrapButtonGroup } from 'reactstrap'\r\n\r\ntype ButtonGroupProps = {\r\n  className?: string,\r\n  [rest:string]: any\r\n}\r\n\r\nconst ButtonGroup = ({ className, ...rest }: ButtonGroupProps) => (\r\n  <BootstrapButtonGroup\r\n    className={['flex-wrap', className].join(' ')}\r\n    {...rest}\r\n  />\r\n)\r\n\r\nexport default ButtonGroup\r\n","import React from 'react'\r\n\r\nimport { Button } from 'components'\r\n\r\nimport './IconButton.scss'\r\n\r\ntype IconButtonProps = {\r\n  children?: any,\r\n  icon: any,\r\n  className?: string,\r\n  [rest:string]: any\r\n}\r\n\r\nconst IconButton = ({ children, icon, className, ...rest }: IconButtonProps) => {\r\n  const classes = ['icon-button-component']\r\n  className && classes.push(className)\r\n  children && classes.push('has-children')\r\n\r\n  return (\r\n    <Button\r\n      className={classes.join(' ')}\r\n      {...rest}\r\n    >\r\n      {icon} {!!children && children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default IconButton\r\n","import React from 'react'\r\nimport { FaThumbsUp, FaThumbsDown } from 'react-icons/fa'\r\n\r\nimport { IconButton, ButtonGroup } from 'components'\r\n\r\nimport './VoteButtons.scss'\r\n\r\ntype VoteButtonsProps = {\r\n  onSelect: Function,\r\n  [rest:string]: any\r\n}\r\n\r\nconst VoteButtons = ({ onSelect, ...rest }: VoteButtonsProps) => (\r\n  <ButtonGroup className='vote-buttons-component'>\r\n    {[true, false].map((isApproved, index) => (\r\n      <IconButton\r\n        key={index}\r\n        color={isApproved ? 'success' : 'danger'}\r\n        icon={isApproved ? <FaThumbsUp /> : <FaThumbsDown />}\r\n        onClick={() => onSelect(isApproved)}\r\n        {...rest}\r\n      />\r\n    ))}\r\n  </ButtonGroup>\r\n)\r\n\r\nexport default VoteButtons\r\n","import React from 'react'\r\nimport { Input as BootstrapInput } from 'reactstrap'\r\n\r\ntype InputProps = {\r\n  onChange?: Function,\r\n  onChangeDelay?: number,\r\n  [rest:string]: any\r\n}\r\n\r\nlet changeIndex = 0\r\nconst Input = ({ onChange, onChangeDelay, ...rest }: InputProps) => (\r\n  <BootstrapInput\r\n    onChange={(e) => {\r\n      const value = e.target.value\r\n      if (onChange) {\r\n        if (!onChangeDelay) {\r\n          onChange(value)\r\n        } else {\r\n          // Wait to apply changes, and only apply if value hasn't been changed\r\n          changeIndex++\r\n          const currentIndex = changeIndex\r\n          setTimeout(() => {\r\n            if (currentIndex === changeIndex) {\r\n              onChange(value)\r\n            }\r\n          }, onChangeDelay)\r\n        }\r\n      }\r\n    }}\r\n    {...rest}\r\n  />\r\n)\r\n\r\nexport default Input\r\n","import { toast, Slide } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nclass ToastUtils {\r\n  constructor () {\r\n    toast.configure({\r\n      autoClose: 2000,\r\n      draggable: false,\r\n      position: 'bottom-right',\r\n      transition: Slide\r\n    })\r\n  }\r\n\r\n  success (text: string) {\r\n    toast.success(text)\r\n  }\r\n\r\n  info (text: string) {\r\n    toast.info(text)\r\n  }\r\n\r\n  warning (text: string) {\r\n    toast.warning(text)\r\n  }\r\n\r\n  error (text: string) {\r\n    toast.error(text)\r\n  }\r\n}\r\n\r\nconst ToastUtilsInstance = new ToastUtils()\r\n\r\nexport default ToastUtilsInstance\r\n","import ToastUtils from './ToastUtils'\r\n\r\nclass ErrorUtils {\r\n  static displayError (error: string) {\r\n    ToastUtils.info(error)\r\n  }\r\n\r\n  static displayErrors (errors: string[]) {\r\n    errors.forEach((error) => ErrorUtils.displayError(error))\r\n  }\r\n}\r\n\r\nexport default ErrorUtils\r\n","import React, { useState } from 'react'\r\nimport { FaCheck, FaEnvelope } from 'react-icons/fa'\r\nimport * as yup from 'yup'\r\n\r\nimport { IconButton, Input, InputGroup, InputGroupAddon } from 'components'\r\nimport { ErrorUtils } from 'utils'\r\n\r\ntype EmailInputProps = {\r\n  onSubmit?: Function,\r\n  saving?: boolean,\r\n  hasEmail?: boolean,\r\n  [rest:string]: any\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string()\r\n    .required('Þú verður að skrá netfang.')\r\n    .email('Netfang er ekki á réttu formi.')\r\n})\r\n\r\nconst EmailInput = ({ onSubmit, saving, hasEmail, ...rest }: EmailInputProps) => {\r\n  const [email, setEmail]: [string, Function] = useState('')\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault()\r\n    try {\r\n      await schema.validate({ email })\r\n      onSubmit && onSubmit(email)\r\n    } catch (e) {\r\n      e.errors && ErrorUtils.displayErrors(e.errors)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <InputGroup>\r\n        <Input\r\n          type='email'\r\n          value={hasEmail ? 'Netfang skráð' : email}\r\n          onChange={(value: string) => setEmail(value)}\r\n          disabled={hasEmail}\r\n          {...rest}\r\n        />\r\n        <InputGroupAddon addonType='append'>\r\n          <IconButton\r\n            icon={hasEmail ? <FaCheck /> : <FaEnvelope />}\r\n            disabled={hasEmail}\r\n            type='submit'\r\n            loading={saving}\r\n          />\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EmailInput\r\n","import { InputGroup } from 'reactstrap'\r\n\r\nexport default InputGroup\r\n","import { InputGroupAddon } from 'reactstrap'\r\n\r\nexport default InputGroupAddon\r\n","import React from 'react'\r\nimport { FaArrowRight, FaCopy } from 'react-icons/fa'\r\nimport copy from 'copy-to-clipboard'\r\n\r\nimport { IconButton, Input, InputGroup, InputGroupAddon } from 'components'\r\n\r\n\r\n\r\nconst LinkReadOnlyInput = ({ link }: { link: string }) => {\r\n  const getUrl = (link: string): string => (\r\n    `${window.location.origin}${link}`\r\n  )\r\n\r\n  const url = getUrl(link)\r\n\r\n  return (\r\n    <InputGroup>\r\n      <Input readOnly value={url} />\r\n      <InputGroupAddon addonType='append'>\r\n        <IconButton\r\n          icon={<FaCopy />}\r\n          onClick={() => copy(url)}\r\n          />\r\n        <IconButton\r\n          icon={<FaArrowRight />}\r\n          link={link}\r\n          />\r\n      </InputGroupAddon>\r\n\r\n    </InputGroup>\r\n  )\r\n}\r\n\r\nexport default LinkReadOnlyInput\r\n","import { Col } from 'reactstrap'\r\n\r\nexport default Col\r\n","import { Row } from 'reactstrap'\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport { Card as BootstrapCard, CardBody, CardTitle } from 'reactstrap'\r\n\r\nimport './Card.scss'\r\n\r\ntype CardProps = {\r\n  title?: string,\r\n  [rest:string]: any\r\n}\r\n\r\nconst Card = ({ className, children, title, ...rest }: CardProps) => {\r\n  const classes = ['card-component']\r\n  className && classes.push(className)\r\n\r\n  return (\r\n    <BootstrapCard className={classes.join(' ')} {...rest}>\r\n      <CardBody>\r\n        {title && <CardTitle>{title}</CardTitle>}\r\n        {children}\r\n      </CardBody>\r\n    </BootstrapCard>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport { FaCheck } from 'react-icons/fa'\r\n\r\nimport { Card, IconButton, VoteButtons } from 'components'\r\nimport { Name } from 'types'\r\n\r\ntype NameCardProps = {\r\n  name: Name,\r\n  onSelect: Function,\r\n  continueButton?: string,\r\n  unanswered?: number,\r\n  [rest:string]: any\r\n}\r\n\r\nconst NameCard = ({ name, onSelect, continueButton, unanswered, ...rest }: NameCardProps) => (\r\n  <Card\r\n    className='name-card main-card'\r\n    title={name.name || 'Ekkert nafn uppfyllir valin skilyrði'}\r\n  >\r\n    {continueButton && (\r\n      <div className='continue-button d-md-none'>\r\n        <IconButton\r\n          color='primary'\r\n          link={`/send/${continueButton}`}\r\n          icon={<FaCheck />}\r\n        >\r\n          Ljúka vali\r\n        </IconButton>\r\n      </div>\r\n    )}\r\n    {!!unanswered && (\r\n      <div className='unanswered d-md-none'>\r\n        Ósvörað: {unanswered}\r\n      </div>\r\n    )}\r\n    {!!name.name && (\r\n      <>\r\n        <p>\r\n          {name.firstNamed} bera {name.name} sem fyrsta nafn.\r\n          <br />\r\n          {name.secondNamed} bera {name.name} sem annað nafn.\r\n        </p>\r\n        <VoteButtons\r\n          onSelect={onSelect}\r\n          {...rest}\r\n        />\r\n      </>\r\n    )}\r\n  </Card>\r\n)\r\n\r\nexport default NameCard\r\n","import React from 'react'\r\nimport { Navbar, NavbarBrand } from 'reactstrap'\r\n\r\nimport './Header.scss'\r\n\r\nconst Header = () => (\r\n  <Navbar className='header-component'>\r\n    <div className='container'>\r\n      <NavbarBrand href='/'>Nafnaleit</NavbarBrand>\r\n    </div>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\n\r\nexport default Link\r\n","import React from 'react'\r\nimport { FaSpinner } from 'react-icons/fa'\r\n\r\nimport './Spinner.scss'\r\n\r\nconst Spinner = ({ size = 4 }) => {\r\n  return (\r\n    <div className='spinner-component'>\r\n      <FaSpinner className='icon-spin' size={`${size}em`} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","type EnvParams = {\r\n  api: string\r\n}\r\n\r\nconst production: EnvParams = {\r\n  api: 'https://api.nafnaleit.com/v1'\r\n}\r\n\r\nconst local: EnvParams = {\r\n  api: 'http://127.0.0.1:8000/v1'\r\n}\r\n\r\nconst env = process.env.REACT_APP_ENV\r\n\r\nconst envParams: EnvParams = (\r\n  env === 'production'\r\n  ? production\r\n  : local\r\n)\r\n\r\nexport default envParams\r\n","import axios from 'axios'\r\n\r\nimport EnvParams from 'environment'\r\n\r\nconst connector = axios.create({\r\n  baseURL: `${EnvParams.api}`,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-type': 'application/json'\r\n  }\r\n})\r\n\r\nexport default connector\r\n","import connector from './connector'\r\n\r\nclass AnswerService {\r\n  static async createNewGroup () {\r\n    const { data } = await connector.get('/newGroup/')\r\n    return data\r\n  }\r\n\r\n  static async newAnswer (body: {\r\n    code: string,\r\n    isApproved: boolean,\r\n    name: string\r\n  }) {\r\n    const { data } = await connector.post('/newAnswer/', body)\r\n    return data\r\n  }\r\n\r\n  static async finishAnswer (body: {\r\n    code: string,\r\n    isApproved: boolean,\r\n    name: string\r\n  }) {\r\n    const { data } = await connector.post('/finishAnswer/', body)\r\n    return data\r\n  }\r\n\r\n  static async registerEmail (body: {\r\n    code: string,\r\n    email: string\r\n  }) {\r\n    const { data } = await connector.post('/registerEmail/', body)\r\n    return data\r\n  }\r\n}\r\n\r\nexport default AnswerService\r\n","import connector from './connector'\r\n\r\nclass NamesService {\r\n  static async getNames (params: {\r\n    type: string,\r\n    code: string,\r\n    isMale: string,\r\n    startsWith?: string\r\n  }) {\r\n    const { data } = await connector.get('/names/', { params })\r\n    return data\r\n  }\r\n\r\n  static async getNameCount (params: {\r\n    code: string, isSender: number\r\n  }) {\r\n    const { data } = await connector.get('/nameCount/', { params })\r\n    return data\r\n  }\r\n\r\n  static async getUnfinished (code: string) {\r\n    const { data } = await connector.get(`/unfinished/${code}`)\r\n    return data\r\n  }\r\n\r\n  static async getResults (code: string) {\r\n    const { data } = await connector.get(`/results/${code}`)\r\n    return data\r\n  }\r\n}\r\n\r\nexport default NamesService\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { Row, Col, Card, NameCard } from 'components'\r\nimport type { Name } from 'types'\r\nimport { AnswerService, NamesService } from 'services'\r\nimport { ErrorUtils } from 'utils'\r\n\r\ntype AnswerProps = {\r\n  history: any\r\n}\r\n\r\nconst Answer = ({ history }: AnswerProps) => {\r\n  const [names, setNames]: [Name[], Function] = useState([])\r\n  const [loading, setLoading]: [boolean, Function] = useState(false)\r\n  const [saving, setSaving]: [boolean, Function] = useState(false)\r\n  const { code } = useParams()\r\n\r\n  useEffect(() => {\r\n    getUnfinishedNames()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const getUnfinishedNames = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await NamesService.getUnfinished(code)\r\n      setNames(response)\r\n    } catch (e) {\r\n      ErrorUtils.displayError(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleSelect = async (isApproved: boolean) => {\r\n    setSaving(true)\r\n    try {\r\n      await AnswerService.finishAnswer({\r\n        code,\r\n        isApproved,\r\n        name: names[0].name || ''\r\n      })\r\n      if (names.length > 1) {\r\n        setNames(names.slice(1))\r\n      } else {\r\n        history.push(`/results/${code}`)\r\n      }\r\n    } catch (e) {\r\n      ErrorUtils.displayError(e)\r\n    } finally {\r\n      setSaving(false)\r\n    }\r\n  }\r\n\r\n  return loading ? null : (\r\n    <div className='answer-page'>\r\n      <h1>Hæhæ</h1>\r\n      <p>Sá sem sendi þér þetta vill að þú takir afstöðu til eftirfarandi nafna.</p>\r\n      <p>Þegar þú hefur farið í gegnum öll nöfnin, þá sjáið þið lista yfir nöfn sem ykkur líkaði :)</p>\r\n      <Row>\r\n        <Col md={6}>\r\n          <NameCard\r\n            name={names[0] || {}}\r\n            onSelect={(isApproved: boolean) => handleSelect(isApproved)}\r\n            disabled={saving}\r\n            unanswered={names.length}\r\n          />\r\n        </Col>\r\n        <Col md={6} className='d-none d-md-block'>\r\n          <Card className='main-card'>\r\n            <div className='status'>\r\n              Ósvöruð: {names.length}\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Answer\r\n","import React from 'react'\r\n\r\nimport { Button } from 'components'\r\n\r\nimport './Home.scss'\r\n\r\nconst Home = () => (\r\n  <div className='home-page'>\r\n    <h1>Halló hæ!</h1>\r\n    <p>Hér getur þú fengið hugmyndir að nöfnum.</p>\r\n    <p>Ferlið er einfalt:</p>\r\n    <ol>\r\n      <li>Þú færð nöfn og velur þau sem þú ert hrifin/n af.</li>\r\n      <li>Þú velur að halda áfram og færðu hlekk til að senda á annan aðila.  Sá aðili fær öll nöfnin sem þú fórst í gegnum, en sér þó ekki hvaða nöfn þú valdir.</li>\r\n      <li>Þegar hann hefur lokið sinni yfirferð, þá sjáið þið hvaða nöfn þið völduð.</li>\r\n    </ol>\r\n\r\n    <div className='gender-buttons'>\r\n      <Button\r\n        link='/names/1'\r\n        className='boy'\r\n      >\r\n        Drengur\r\n      </Button>\r\n      <Button\r\n        link='/names/0'\r\n        className='girl'\r\n      >\r\n        Stúlka\r\n      </Button>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { ButtonGroup, Button, Card, Col, Input, Row, NameCard } from 'components'\r\nimport { AnswerService, NamesService } from 'services'\r\nimport { ErrorUtils } from 'utils'\r\nimport type { Name, Count } from 'types'\r\n\r\nimport './Names.scss'\r\n\r\nconst nameTypes = [\r\n  {\r\n    label: 'Handahófskennd',\r\n    value: 'random'\r\n  },\r\n  {\r\n    label: 'Algeng',\r\n    value: 'common'\r\n  },\r\n  {\r\n    label: 'Óalgeng',\r\n    value: 'uncommon'\r\n  },\r\n  {\r\n    label: 'Stutt',\r\n    value: 'short'\r\n  },\r\n  {\r\n    label: 'Löng',\r\n    value: 'long'\r\n  }\r\n]\r\n\r\ntype NamesProps = {\r\n  history: any\r\n}\r\n\r\nconst defaultCount: Count = {\r\n  liked: 0,\r\n  disliked: 0,\r\n  hasEmail: false\r\n}\r\n\r\nconst defaultName: Name = {\r\n  name: '',\r\n  firstNamed: 0,\r\n  secondNamed: 0\r\n}\r\n\r\nlet startsWith = ''\r\nconst Names = ({ history }: NamesProps) => {\r\n  const [type, setType]: [string, Function] = useState('random')\r\n  const [name, setName]: [Name, Function] = useState(defaultName)\r\n  const [count, setCount]: [Count, Function] = useState(defaultCount)\r\n  const [loading, setLoading]: [boolean, Function] = useState(false)\r\n  const [saving, setSaving]: [boolean, Function] = useState(false)\r\n  const { isMale, code }: { isMale: string, code: string} = useParams()\r\n\r\n  useEffect(() => {\r\n    checkGroup()\r\n    startsWith = ''\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const checkGroup = async () => {\r\n    setLoading(true)\r\n    try {\r\n      if (!code) {\r\n        const group = await AnswerService.createNewGroup()\r\n        history.replace(`/names/${isMale}/${group.code}`)\r\n      } else {\r\n        const data = await NamesService.getNameCount({ code, isSender: 1 })\r\n        setCount(data)\r\n      }\r\n      await getName(type)\r\n    } catch (e) {\r\n      ErrorUtils.displayError(e.data)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const getName = async (nameType: string) => {\r\n    try {\r\n      const response = await NamesService.getNames({ isMale, code, type: nameType, startsWith })\r\n      setName(response[0] || defaultName)\r\n    } catch (e) {\r\n      ErrorUtils.displayError(e.data)\r\n    }\r\n  }\r\n\r\n  const handleSelect = async (isApproved: boolean) => {\r\n    setSaving(true)\r\n    try {\r\n      await AnswerService.newAnswer({\r\n        code,\r\n        isApproved,\r\n        name: name.name || ''\r\n      })\r\n      const newCount = { ...count }\r\n      if (isApproved) {\r\n        newCount.liked += 1\r\n      } else {\r\n        newCount.disliked += 1\r\n      }\r\n      setCount(newCount)\r\n      getName(type)\r\n    } catch (e) {\r\n      ErrorUtils.displayError(e)\r\n    } finally {\r\n      setSaving(false)\r\n    }\r\n  }\r\n\r\n  const onSelectType = (nameType: string) => {\r\n    setType(nameType)\r\n    getName(nameType)\r\n  }\r\n\r\n  const handleStartsWithChange = (newStartsWith: string) => {\r\n    startsWith = newStartsWith\r\n    getName(type)\r\n  }\r\n\r\n  return loading ? null : (\r\n    <div className='names-page'>\r\n      <ButtonGroup className='type-buttons'>\r\n        {nameTypes.map(({ label, value }) => (\r\n          <Button\r\n            key={value}\r\n            onClick={() => onSelectType(value)}\r\n            color='light'\r\n            active={type === value}\r\n          >\r\n            {label}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <Input\r\n        placeholder='Nafn byrjar á...'\r\n        className='mb-4'\r\n        onChangeDelay={800}\r\n        onChange={(value: string) => handleStartsWithChange(value)}\r\n      />\r\n      <Row>\r\n        <Col md={6}>\r\n          <NameCard\r\n            name={name}\r\n            onSelect={(isApproved: boolean) => handleSelect(isApproved)}\r\n            disabled={saving}\r\n            continueButton={count.liked ? code : undefined}\r\n          />\r\n        </Col>\r\n        <Col md={6} className='d-none d-md-block'>\r\n          <Card className='main-card'>\r\n            <div className='status'>\r\n              Valin nöfn: {count.liked}\r\n              <br />\r\n              Heildar svör: {count.liked + count.disliked}\r\n            </div>\r\n            {(count.liked > 0) && (\r\n              <Button\r\n                className='finish'\r\n                color='primary'\r\n                link={`/send/${code}`}\r\n              >\r\n                Ljúka vali\r\n              </Button>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Names\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { EmailInput, LinkReadOnlyInput } from 'components'\r\nimport { ErrorUtils } from 'utils'\r\nimport { NamesService, AnswerService } from 'services'\r\n\r\nimport './Send.scss'\r\n\r\ninterface Count {\r\n  liked: number,\r\n  disliked: number,\r\n  hasEmail: boolean\r\n}\r\n\r\nconst defaultCount: Count = {\r\n  liked: 0,\r\n  disliked: 0,\r\n  hasEmail: false\r\n}\r\n\r\nconst Send = () => {\r\n  const { code }: { code: string} = useParams()\r\n  const [count, setCount]: [Count, Function] = useState(defaultCount)\r\n  const [loading, setLoading]: [boolean, Function] = useState(false)\r\n  const [savingEmail, setSavingEmail]: [boolean, Function] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getCount()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const getCount = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const data = await NamesService.getNameCount({ code, isSender: 1 })\r\n      setCount(data)\r\n    } catch (e) {\r\n      ErrorUtils.displayError(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const registerEmail = async (email: string) => {\r\n    setSavingEmail(true)\r\n    try {\r\n      await AnswerService.registerEmail({\r\n        code,\r\n        email\r\n      })\r\n      setCount({ ...count, hasEmail: true })\r\n    } catch (e) {\r\n      ErrorUtils.displayError(e.data)\r\n    } finally {\r\n      setSavingEmail(false)\r\n    }\r\n  }\r\n\r\n  return loading ? null : (\r\n    <div className='send-page'>\r\n      <h1>Flott nöfn sem þú valdir!</h1>\r\n      <p>Nú þarftu bara að senda link á þann sem þú vilt, svo hann geti farið í gegnum sömu nöfn og þú:</p>\r\n      <LinkReadOnlyInput link={`/answer/${code}`} />\r\n      <p>Þegar hann hefur lokið sér af, þá getið þið sé niðurstöðurnar á þessum link:</p>\r\n      <LinkReadOnlyInput link={`/results/${code}`} />\r\n      <p>Ef þú vilt, þá geturðu einnig fengið e-mail sent þegar mótaðili hefur svarað :)</p>\r\n      <EmailInput\r\n        onSubmit={(value: string) => registerEmail(value)}\r\n        saving={savingEmail}\r\n        hasEmail={count.hasEmail}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Send\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { Card, Link, Col, Row } from 'components'\r\nimport { NamesService } from 'services'\r\n\r\nimport './Results.scss'\r\n\r\ntype SingleResult = {\r\n  firstNamed: number,\r\n  name: string,\r\n  receiverLiked: boolean,\r\n  secondNamed: number,\r\n  senderLiked: boolean\r\n}\r\n\r\ntype Results = {\r\n  bothLiked: string[],\r\n  receiverLiked: string[],\r\n  senderLiked: string[]\r\n}\r\n\r\nconst defaultResults = {\r\n  bothLiked: [],\r\n  receiverLiked: [],\r\n  senderLiked: []\r\n}\r\n\r\nconst Results = () => {\r\n  const [loading, setLoading]: [boolean, Function] = useState(false)\r\n  const [results, setResults]: [Results, Function] = useState(defaultResults)\r\n  const [isNotFinished, setIsNotFinished]: [boolean, Function] = useState(false)\r\n  const { code }: { code: string} = useParams()\r\n\r\n  useEffect(() => {\r\n    getResults()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const getResults = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await NamesService.getResults(code)\r\n      const bothLiked = response.filter((result: SingleResult) => result.receiverLiked && result.senderLiked).map((result: SingleResult) => result.name )\r\n      const senderLiked = response.filter((result: SingleResult) => result.senderLiked).map((result: SingleResult) => result.name )\r\n      const receiverLiked = response.filter((result: SingleResult) => result.receiverLiked).map((result: SingleResult) => result.name )\r\n\r\n      setResults({ bothLiked, receiverLiked, senderLiked })\r\n    } catch (e) {\r\n      setIsNotFinished(true)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  if (isNotFinished) {\r\n    return (\r\n      <div className='results-page'>\r\n        <h1>Nei heyrðu, seinni aðili er ekki búinn að klára yfirferðina!</h1>\r\n        <Link to={`/answer/${code}`}>Fara þangað til að klára!</Link>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return loading ? null : (\r\n    <div className='results-page'>\r\n      <h1>Húrra! Þið eruð búin að klára að fara í gegnum nöfnin!</h1>\r\n      <Row>\r\n        <Col md={4} className='d-flex align-items-stretch'>\r\n          <Card title={results.bothLiked.length ? 'Nöfn sem báðir aðilar völdu' : 'Því miður var ekkert nafn sem báðir aðilar völdu :('}>\r\n            {results.bothLiked.map((name) => (\r\n              <div\r\n                key={name}\r\n                className='font-weight-bold'\r\n              >\r\n                {name}\r\n              </div>\r\n            ))}\r\n          </Card>\r\n        </Col>\r\n        <Col md={4} className='d-flex align-items-stretch'>\r\n          <Card title='Nöfn sem fyrri aðili valdi'>\r\n            {results.senderLiked.map((name) => (\r\n              <div\r\n                key={name}\r\n                className={results.bothLiked.find((n) => name === n) ? 'font-weight-bold' : ''}\r\n              >\r\n                {name}\r\n              </div>\r\n            ))}\r\n          </Card>\r\n        </Col>\r\n        <Col md={4} className='d-flex align-items-stretch'>\r\n          <Card title='Nöfn sem seinni aðili valdi'>\r\n            {results.receiverLiked.map((name) => (\r\n              <div\r\n                key={name}\r\n                className={results.bothLiked.find((n) => name === n) ? 'font-weight-bold' : ''}\r\n              >\r\n                {name}\r\n              </div>\r\n            ))}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\n\r\nimport { Header } from 'components'\r\n\r\nimport { Home, Names, Send, Answer, Results } from 'pages'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './styles/index.scss'\r\n\r\nconst App = () => (\r\n  <>\r\n    <Header />\r\n    <div className='container route-container'>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path={['/names/:isMale', '/names/:isMale/:code']} component={Names} />\r\n          <Route exact path='/send/:code' component={Send} />\r\n          <Route exact path='/answer/:code' component={Answer} />\r\n          <Route exact path='/results/:code' component={Results} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}